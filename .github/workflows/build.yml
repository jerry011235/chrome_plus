name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".clang-format"
      - ".gitignore"
      - "README.md"
      - "README_CN.md"
      - "LICENSE"
      - "setdll/**"
      - "src/version.h"
      - ".github/ISSUE_TEMPLATE/**"
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (SemVer)'
        required: true

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: build_x64
            arch: x64


    name: ${{ matrix.name }}
    runs-on: windows-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Update version.h
        shell: bash
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            COMMIT_HASH=$(git rev-parse --short HEAD)
            VERSION="alpha-${COMMIT_HASH}"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            sed -i '/#define RELEASE_VER_STR/,/TOSTRING(RELEASE_VER_FIX)/c\#define RELEASE_VER_STR "'"$VERSION"'"' src/version.h
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
            sed -i 's/#define RELEASE_VER_MAIN .*/#define RELEASE_VER_MAIN '"$MAJOR"'/' src/version.h
            sed -i 's/#define RELEASE_VER_SUB .*/#define RELEASE_VER_SUB '"$MINOR"'/' src/version.h 
            sed -i 's/#define RELEASE_VER_FIX .*/#define RELEASE_VER_FIX '"$PATCH"'/' src/version.h
          fi

      - name: Setup VC-LTL
        run: nuget install VC-LTL

      - name: Setup Xmake
        uses: xmake-io/github-action-setup-xmake@v1

      - name: Configure Xmake
        run: xmake f -a ${{ matrix.arch }}

      - name: Build Chrome++
        run: xmake

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: version-${{ matrix.arch }}-${{ env.VERSION }}
          path: build/release/*

  Create Release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: comnoco/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.VERSION }}
          release_name: version-${{ matrix.arch }}-${{ env.VERSION }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
